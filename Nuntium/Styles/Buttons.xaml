<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Nuntium">

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!--Basic Button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}" />

    <!-- Default Button -->
    <Style TargetType="{x:Type Button}" x:Key="DefaultButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Grid.Effect>
                            <DropShadowEffect Opacity="0.2" BlurRadius="10"/>
                        </Grid.Effect>
                        <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <Label VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentLightColorBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="6" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="IconButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeBig}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Notification Button -->
    <Style TargetType="{x:Type Button}" x:Key="NotificationButton" BasedOn="{StaticResource IconButton}">


    </Style>

    <!-- Window Control Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentLightColorBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Icon and text Button -->
    <Style TargetType="{x:Type Button}" x:Key="IconTextButton" BasedOn="{StaticResource ButtonBaseStyle}">

        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        
                        <Border Padding="{TemplateBinding Padding}" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="1"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!--Icon-->
                                <Label FontFamily="{StaticResource FontAwesomeSolid}" 
                                       FontSize="{TemplateBinding FontSize}" 
                                       Content="{TemplateBinding Tag}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                
                                <!--Text-->
                                <Label Foreground="{TemplateBinding Foreground}" 
                                       FontSize="{TemplateBinding FontSize}" 
                                       Content="{TemplateBinding Content}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                
                            </StackPanel>
                            
                        </Border>
                        
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.50" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>