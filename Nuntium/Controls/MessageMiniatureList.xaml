<UserControl x:Class="Nuntium.MessageMiniatureList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:Nuntium"
             xmlns:core="clr-namespace:Nuntium.Core;assembly=Nuntium.Core"

             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             >

    <Grid>

        <!--No messages info-->
        <Label 
            Content="No messages found"
            Visibility="{Binding Items.Count, 
            Converter={local:InverseNumberToVisibilityGoneConverter}}"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Margin="16"
            FontSize="{StaticResource FontSizeRegularExtra}"
            Foreground="{StaticResource SideColorBrush}"
            />

        <!--List of messages-->
        <ListView 
        Name="MessagesList"
        VirtualizingPanel.ScrollUnit="Pixel"
        ItemsSource="{Binding Items}" 
        SelectedItem="{Binding Selected}"
        SelectionMode="Extended">

            <i:Interaction.Behaviors>
                <local:MultiSelectionBehavior SelectedItems="{Binding SelectedItems}"/>
            </i:Interaction.Behaviors>

            <!--Item container style-->
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">

                                <Grid 
                                    local:AttachedFrameworkElementAnimations.AnimationCondition="{Binding AnimateOut, Converter={local:InverseBoolean}}"
                                    local:AttachedFrameworkElementAnimations.AnimateInDirection="Fade"
                                    local:AttachedFrameworkElementAnimations.AnimateOutDirection="Fade"
                                    local:AttachedFrameworkElementAnimations.AnimationTimeSpan="{Binding AnimateOutTimeSpan}"
                                    Name="mainContainer"
                                    Background="Transparent"
                                    MaxHeight="170"
                                    >

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!--Check mark-->
                                    <Border 
                                    Name="checkMark"
                                    Grid.Column="0"
                                    Grid.RowSpan="2"
                                    BorderThickness="2 0 0 0" 
                                    BorderBrush="Transparent"/>

                                    <!--Avatar-->
                                    <local:RoundAvatar
                                    x:Name="avatar"
                                    Width="36"
                                    Height="36"
                                    Margin="8"
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Initials="{Binding Initials}"
                                    AvatarBackground="{Binding AvatarBackground}"
                                    ImagePath="{Binding ImagePath}"
                                    />

                                    <!--Name, title and time-->
                                    <Grid 
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Margin="8" 
                                    >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Sender name, message title and "is new" indicator-->
                                        <StackPanel 
                                        Grid.Column="1"
                                        >

                                            <!--Sender's name-->
                                            <Label 
                                            Padding="8 8 8 0"
                                            Foreground="{StaticResource SideForgroundColorBrush}"
                                            Content="{Binding SenderName}"/>

                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!--Message title-->
                                                <TextBlock 
                                                Name="title"
                                                Grid.Column="0"
                                                Padding="8"
                                                VerticalAlignment="Center"
                                                FontWeight="UltraBold"
                                                Foreground="{StaticResource MainForegroundBrush}"
                                                FontSize="{StaticResource FontSizeRegularExtra}"
                                                TextTrimming="CharacterEllipsis"
                                                Text="{Binding Title}"/>

                                                <!--Is new indicator-->
                                                <Border
                                                Grid.Column="1"
                                                Width="8"
                                                Height="8"
                                                Margin="8"
                                                VerticalAlignment="Center"
                                                CornerRadius="100" 
                                                Visibility="{Binding WasRead,Converter={local:InverseBooleanToVisibilityGoneConverter}}"
                                                Background="{StaticResource AccentColorBrush}"
                                                />

                                            </Grid>
                                        </StackPanel>

                                        <!--Send date and trash button-->
                                        <StackPanel Grid.Column="2">

                                            <!--Send date-->
                                            <Label
                                            Content="{Binding SendDate,
                                            Converter={local:MessageDateTimeConverter}}"
                                            ToolTip="{Binding SendDate, Converter={local:DateTimeToStringConverter},
                                            ConverterParameter=dd.MM.yyyy HH:mm}"
                                            Foreground="{StaticResource SideForgroundColorBrush}"
                                            Margin="4"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Top"
                                            />

                                            <StackPanel
                                                Orientation="Horizontal"
                                                >
                                                
                                            <!--Trash icon-->
                                            <Button 
                                            Name="deleteButton"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding ElementName=mainContainer}"
                                            Visibility="Hidden"
                                            Margin="0 0 8 0"
                                            FontFamily="{StaticResource FontAwesomeSolid}"
                                            Content="{StaticResource FontAwesomeBin}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            ToolTip="Delete message"
                                            >
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
                                                        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                                                        <Setter Property="Foreground" Value="{StaticResource SideLightColorBrush}"/>

                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource SideForgroundColorBrush}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                                
                                            <!--Archive icon-->
                                            <Button 
                                            Name="archiveButton"
                                            Command="{Binding ToggleArchiveCommand}"
                                            CommandParameter="{Binding ElementName=mainContainer}"
                                            Margin="0 0 8 0"
                                            FontFamily="{StaticResource FontAwesomeSolid}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            >
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
                                                            <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                                                            <Setter Property="Foreground" Value="{StaticResource SideLightColorBrush}"/>
                                                            <Setter Property="Content" Value="{StaticResource FontAwesomeArchive}"/>
                                                            <Setter Property="Visibility" Value="Hidden"/>

                                                            <Setter Property="ToolTip" Value="Archive message"/>

                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" Value="{StaticResource SideForgroundColorBrush}"/>
                                                                </Trigger>
                                                                
                                                                <DataTrigger Binding="{Binding IsArchived}" Value="True">
                                                                    <Setter Property="Content" Value="{StaticResource FontAwesomeRedo}"/>
                                                                    <Setter Property="ToolTip" Value="Restore message"/>
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Placement}" Value="Deleted">
                                                                    <Setter Property="Foreground" Value="{StaticResource SideLightColorBrush}"/>
                                                                </DataTrigger>

                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                
                                            </StackPanel>
                                        </StackPanel>

                                    </Grid>

                                    <!--Have Attachments and has star indicators-->
                                    <StackPanel
                                        Grid.Column="1"
                                        Grid.Row="1"
                                        >

                                        <!--Star icon-->
                                        <Button 
                                            x:Name="starButton"
                                            HorizontalAlignment="Center"
                                            Content="{StaticResource FontAwesomeStar}"
                                            ToolTip="Mark it as important"
                                            Command="{Binding ToggleStarCommand}"
                                            >
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
                                                    <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
                                                    <Setter Property="Foreground" Value="{StaticResource SideLightColorBrush}"/>

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource SideForgroundColorBrush}"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding IsStared}" Value="True">
                                                            <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}"/>
                                                            <Setter Property="Foreground" Value="LightGoldenrodYellow"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Placement}" Value="Deleted">
                                                            <Setter Property="Foreground" Value="{StaticResource SideLightColorBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <!--Have Attachments indicator-->
                                        <Label 
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Top"
                                            Margin="4"
                                            FontFamily="{StaticResource FontAwesomeSolid}"
                                            Content="{StaticResource FontAwesomePaperClip}"
                                            Foreground="{StaticResource SideLightColorBrush}"
                                            FontSize="{StaticResource FontSizeBig}"
                                            Visibility="{Binding HasAttachments, Converter={local:BooleanToVisibilityGoneConverter}}"
                                            />


                                    </StackPanel>

                                    <!--Message snipit-->
                                    <TextBlock 
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Padding="16 0 16 16"
                                    Text="{Binding MessageSnipit}"
                                    TextWrapping="Wrap"
                                    TextTrimming="CharacterEllipsis"
                                    Foreground="{StaticResource SideForgroundColorBrush}"
                                    />

                                </Grid>

                                <!--Triggers-->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="mainContainer" Value="{StaticResource SideLightBackgroundColorBrush}"/>
                                        <Setter Property="Visibility" TargetName="deleteButton" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="archiveButton" Value="Visible"/>
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="mainContainer" Value="{StaticResource DimAccentColorBrush}"/>
                                        <Setter Property="Foreground" TargetName="title" Value="{StaticResource AccentColorBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="checkMark" Value="{StaticResource AccentColorBrush}"/>
                                        <Setter Property="Opacity" TargetName="mainContainer" Value="1"/>
                                    </Trigger>

                                    <DataTrigger Binding="{Binding WasRead}" Value="True">
                                        <Setter Property="FontWeight" TargetName="title" Value="medium"/>
                                        <Setter Property="Opacity" TargetName="mainContainer" Value="0.60"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Placement}" Value="Deleted">
                                        <Setter Property="Foreground" TargetName="deleteButton" Value="red"/>
                                        <Setter Property="ToolTip" TargetName="deleteButton" Value="Permamently delete message"/>
                                    </DataTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>

            <!--ItemsPanel-->
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <!--Template-->
            <ListView.Template>
                <ControlTemplate>
                    <ScrollViewer
                            Focusable="False"
                            HorizontalScrollBarVisibility="Disabled">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </ListView.Template>
        </ListView>


    </Grid>
</UserControl>
